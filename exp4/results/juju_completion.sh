#!/usr/bin/env bash
# Bash completion for juju CLI command
# Generated by cli_taxo

_juju_complete () {

    local cur="${COMP_WORDS[COMP_CWORD]}"
    local prev="${COMP_WORDS[COMP_CWORD-1]}"

    echo "${COMP_WORDS[@]}" | grep -q '-' && {
        i=0
        until echo "${COMP_WORDS[i]}" | grep -q '-' ; do ((i++)); done
        prev="${COMP_WORDS[i-1]}"
    }
    
    case "$prev" in
                status)    cmds="--no-browser-login --color --format --model --output --utc";;
        controllers)    cmds="--no-browser-login --format --output --refresh";;
        add-relation)    cmds="--no-browser-login --model";;
        add-model)    cmds="--no-browser-login --controller --config --credential --owner";;
        add-user)    cmds="--no-browser-login --controller";;
        models)    cmds="--no-browser-login --all --controller --exact-time --format --output --user --uuid";;
        add-unit)    cmds="--model --num-units --to";;
        expose)    cmds="--no-browser-login --model";;
        bootstrap)    cmds="--no-browser-login --agent-version --auto-upgrade --bootstrap-constraints --bootstrap-series --build-agent --clouds --config --constraints --credential --default-model --keep-broken --metadata-source --model-default --no-gui --regions --to";;
        juju)    cmds="add-cloud add-credential add-model add-relation add-unit add-user bootstrap controllers deploy expose models status switch";;
        switch)    cmds="--no-browser-login";;
        add-credential)    cmds="--replace";;
        deploy)    cmds="--no-browser-login --bind --budget --channel --config --constraints --force --model --num-units --plan --resource --series --storage --to";;
        add-cloud)    cmds="--replace";;
        *)    cmds="status controllers add-relation add-model add-user models add-unit expose bootstrap juju switch add-credential deploy add-cloud";;
    esac

    COMPREPLY=( $(compgen -W "$cmds" -- "$cur") )

    return 0
}

complete -F _juju_complete juju
